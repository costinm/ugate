---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wps
  namespace: wps
  labels:
    app: wps
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: wps
  template:
    metadata:
      labels:
        app: wps
    spec:
      serviceAccountName: default

      containers:
        - name: app
          #image: costinm/wps:latest
          #image: localhost:5000/wps:2020-05-24
          image: wps:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5222
              name: tcp-ssh
            - containerPort: 5227
              name: http
            - containerPort: 5228
              name: tls
#          envFrom:
#          - configMapRef:
#              name: wps
#              optional: true
          env:
            - name: GOTRACEBACK
              value: "all"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            # Default 'RO' config source
            - name: wps
              mountPath: /var/lib/dmesh
              readOnly: true

            # Istio volumes
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert

            # Generated files - envoy config, saved certs
            - name: istio-envoy
              mountPath: /etc/istio/proxy

            - name: istio-token
              mountPath: /var/run/secrets/tokens
              readOnly: true

        # Co-located istio Gateway
        - name: istio-proxy
          image: costinm/proxyv2:latest
          args:
            - "proxy"
            - "router"
            - "--serviceCluster"
            - "wps"
          env:
            - name: XDS_SAVE
              value: /etc/istio/proxy/
            - name: XDS_LOCAL
              value: 0.0.0.0:15015
            # Save the workload secret to file
            - name: OUTPUT_CERTS
              value: /etc/istio/proxy/
            # Override default ca addr - use real istiod
            # This will save the certs to a dir, available to local istiod
#            - name: CA_ADDR
#              value: istiod.istio-system.svc:15012
            - name: PROXY_CONFIG
              value: |-
                discoveryAddress: istiod.istio-system.svc:15012
                zipkin:
                  address: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace

          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          ports:
            # Creates on each host a port forwarder:
            # -A CNI-DN-78555e74edb8054e88910 -p tcp -m tcp --dport 5000 -j DNAT --to-destination 10.48.0.156:5000
            - containerPort: 15012
              name: docker
              protocol: TCP
          volumeMounts:
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - name: istio-envoy
              mountPath: /etc/istio/proxy
            - name: istio-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            # Not creating those directories disables Secret watching
            #            - name: ingressgatewaysdsudspath
            #              mountPath: /var/run/ingress_gateway
            - name: podinfo
              mountPath: /etc/istio/pod

      securityContext:
        runAsUser: 0
        runAsGroup: 5228

      volumes:

        # /var/run/secrets/istio-dns - DNS certs (istiod-gen)
        # Istiod writes to this file, used is GW is along istiod
        - emptyDir:
            medium: Memory
          name: local-certs


        # /etc/istio/config - Mesh config, if running in istio-system
        - name: istiod
          configMap:
            name: istiod
            optional: true

        # /etc/cacerts - if running in istio-system
        - name: cacerts
          secret:
            secretName: cacerts
            optional: true

        - name: mesh
          configMap:
            name: istiod-mesh
            optional: true

        # Gateway volumes

        # /etc/istio/proxy
        - name: istio-envoy
          emptyDir: {}

        # /var/run/secrets/istio - public key, autogen
        - name: istiod-ca-cert
          configMap:
            name: istio-ca-root-cert

        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations

        # /var/run/secrets/token - JWT
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: istio-ca

        # WPS Config map
        - name: wps
          secret:
            secretName: wps
            optional: true
