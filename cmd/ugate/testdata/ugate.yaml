basePort: 15000

##
# - 'whitebox' egress - listen on 127.0.0.1, forwardTo
# - forward: listen on :port, forwardTo dest
# - 'input': listen on :port, forwardTo localhost or empty
listeners:
  # direct TCP connect to local iperf3 and fortio (or HTTP on default port)
  ":15101":
    forwardTo: 127.0.0.1:5201
  # Double forwarding - similar with 2 Istio sidecars
  ":15104":
    forwardTo: localhost:15101
  # For HTTP (fortio)
  ":15108":
    forwardTo: localhost:8080

  # Accept using TLS - client must use TLS as well
  ":15102":
    forwardTo: localhost:5201
    proto: tls
  # The equivalent for 2 sidecars - out TLS, in TLS
  ":15103":
    # The TLS server forwarding to iperf3
    forwardTo: localiperf

  # Also enabled by setting PORT, for knative or istio. Plain HTTP, with a sidecar or similar proxy.
  ":9080":
    proto: http

  # Virtual ports, captured via iptables-in
  "-:443":
    proto: https

  "-:8111":
    forwardTo: localhost:15007

  "-:8112":
    proto: https

# This includes simplified 'clusters'.
hosts:
  localiperf:
    addr: localhost:15102

  # Live test server
  h.webinf.info:
    addr: h.webinf.info:15007
    id: B5B6KYYUBVKCX4PWPWSWAIHW2X2D3Q4HZPJYWZ6UECL2PAODHTFA

  c1.webinf.info:
    addr: c1.webinf.info:15007

# Remote accept request (reverse forward, "-R")
# Will also include relays, stun, etc.
# TODO: could also be part of the hosts: definition, include a list
# of ports. This way we don't dup the public key.
remoteAccept:
  #h.webinf.info: "B5B6KYYUBVKCX4PWPWSWAIHW2X2D3Q4HZPJYWZ6UECL2PAODHTFA"

  #c1.webinf.info: ""

