// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/costinm/dmesh/dm/istio/envoy_base.proto

package istio

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Identifies location of where either Envoy runs or where upstream hosts run.
type Locality struct {
	// Region this :ref:`zone <envoy_api_field_core.Locality.zone>` belongs to.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Defines the local service zone where Envoy is running. Though optional, it
	// should be set if discovery service routing is used and the discovery
	// service exposes :ref:`zone data <config_cluster_manager_sds_api_host_az>`,
	// either in this message or via :option:`--service-zone`. The meaning of zone
	// is context dependent, e.g. `Availability Zone (AZ)
	// <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html>`_
	// on AWS, `Zone <https://cloud.google.com/compute/docs/regions-zones/>`_ on
	// GCP, etc.
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	// When used for locality of upstream hosts, this field further splits zone
	// into smaller chunks of sub-zones so they can be load balanced
	// independently.
	SubZone string `protobuf:"bytes,3,opt,name=sub_zone,proto3" json:"sub_zone,omitempty"`
}

func (m *Locality) Reset()                    { *m = Locality{} }
func (m *Locality) String() string            { return proto.CompactTextString(m) }
func (*Locality) ProtoMessage()               {}
func (*Locality) Descriptor() ([]byte, []int) { return fileDescriptorEnvoyBase, []int{0} }

func (m *Locality) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Locality) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Locality) GetSubZone() string {
	if m != nil {
		return m.SubZone
	}
	return ""
}

func init() {
	proto.RegisterType((*Locality)(nil), "istio.Locality")
}

func init() {
	proto.RegisterFile("github.com/costinm/dmesh/dm/istio/envoy_base.proto", fileDescriptorEnvoyBase)
}

var fileDescriptorEnvoyBase = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4a, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xce, 0x2f, 0x2e, 0xc9, 0xcc, 0xcb, 0xd5, 0x4f,
	0xc9, 0x4d, 0x2d, 0xce, 0xd0, 0x4f, 0xc9, 0xd5, 0xcf, 0x2c, 0x2e, 0xc9, 0xcc, 0xd7, 0x4f, 0xcd,
	0x2b, 0xcb, 0xaf, 0x8c, 0x4f, 0x4a, 0x2c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x05, 0x8b, 0x4b, 0xe9, 0x10, 0xd6, 0x8a, 0xd0, 0xa4, 0x64, 0xc5, 0xc5, 0xe1, 0x93, 0x9f, 0x9c,
	0x98, 0x93, 0x59, 0x52, 0x29, 0xc4, 0xc7, 0xc5, 0x56, 0x94, 0x9a, 0x9e, 0x99, 0x9f, 0x27, 0xc1,
	0xa8, 0xc0, 0xa8, 0xc1, 0x29, 0xc4, 0xc3, 0xc5, 0x52, 0x95, 0x9f, 0x97, 0x2a, 0xc1, 0x04, 0xe6,
	0x09, 0x70, 0x71, 0x14, 0x97, 0x26, 0xc5, 0x83, 0x45, 0x98, 0x41, 0x22, 0x4e, 0x5c, 0x51, 0x10,
	0x2b, 0x3b, 0x18, 0x19, 0x93, 0xd8, 0xc0, 0xc6, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc0,
	0x9a, 0x1e, 0x9b, 0xb9, 0x00, 0x00, 0x00,
}
